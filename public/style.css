:root {
    --purple: #4f00bc;
    --blue: #23a6d5;
    --red: #e73c7e;
    --gold: #ffc400;
    --dark-bg: #1a023b;
    --glow-color: rgba(255, 255, 255, 0.7);
    --text-color: #f0f0f0;
    --dice-size: 100px;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Poppins', sans-serif;
    color: var(--text-color);
    overflow: hidden;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--dark-bg);
}

.background-gradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: linear-gradient(315deg, #7b2cbf, #23a6d5, #e73c7e, #ffba08);
    background-size: 400% 400%;
    animation: gradient-animation 15s ease infinite;
}

@keyframes gradient-animation {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

#game-container {
    width: 100%;
    max-width: 600px;
    height: 95%;
    max-height: 800px;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    display: flex;
    flex-direction: column;
    padding: 10px;
    position: relative;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 5px;
    flex-shrink: 0;
    margin-bottom: 10px;
}

header h1 {
    font-size: 1.4rem;
    font-weight: 700;
    text-shadow: 0 0 5px var(--gold);
}

#wallet {
    background: rgba(0, 0, 0, 0.4);
    padding: 8px 15px;
    border-radius: 20px;
    font-size: 1rem;
    font-weight: 600;
    border: 1px solid var(--gold);
}

#game-board {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-grow: 1;
    gap: 10px;
    width: 100%;
}

.player-panel {
    background: rgba(0, 0, 0, 0.4);
    border-radius: 15px;
    padding: 10px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    gap: 10px;
}

.player-panel.active-player {
    border-color: var(--gold);
    box-shadow: 0 0 20px rgba(255, 196, 0, 0.7);
    background: rgba(255, 196, 0, 0.1);
    transform: scale(1.02);
}

.avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    border: 2px solid var(--gold);
    flex-shrink: 0;
}

.player-details {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.player-name-score {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.player-name-score h2 {
    margin-bottom: 0;
    font-size: 1.1rem;
}

.score-container {
    width: 100%;
    height: 10px;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 5px;
    margin-bottom: 0px;
    overflow: hidden;
}

.score-bar {
    width: 0%;
    height: 100%;
    background: linear-gradient(90deg, var(--blue), var(--gold));
    border-radius: 5px;
    transition: width 0.5s ease-out;
}

.score-text {
    font-size: 0.9rem;
    font-weight: 600;
    margin-top: 0px;
}

.dice-history {
    margin-top: 0;
    display: flex;
    justify-content: center;
    gap: 5px;
}

.dice-history span {
    width: 35px;
    height: 35px;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1rem;
    font-weight: bold;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.center-console {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
    flex-grow: 1;
    width: 100%;
}

#chat-container {
    width: 90%;
    max-width: 400px;
    margin: 0 auto;
    padding: 10px;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 15px;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

#chat-messages {
    max-height: 100px;
    overflow-y: auto;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.chat-message {
    padding: 8px 12px;
    border-radius: 15px;
    max-width: 80%;
    font-size: 0.9rem;
}

.chat-message.player1 {
    background: linear-gradient(45deg, var(--blue), var(--purple));
    color: white;
    align-self: flex-start;
}

.chat-message.player2 {
    background: linear-gradient(45deg, var(--red), var(--gold));
    color: white;
    align-self: flex-end;
}

#round-counter {
    font-size: 1rem;
    font-weight: 600;
    background: rgba(0, 0, 0, 0.4);
    padding: 5px 15px;
    border-radius: 15px;
}

#dice-container {
    width: var(--dice-size);
    height: var(--dice-size);
    perspective: 1000px;
    margin: 20px 0;
}

#dice-cube {
    width: var(--dice-size);
    height: var(--dice-size);
    transform-style: preserve-3d;
    /* This transition applies to the final snap after 'rolling' class is removed */
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

#dice-cube.rolling {
    /* This animation defines the actual 'rolling' effect duration */
    animation: roll-animation 1.5s cubic-bezier(.17,.89,.56,1.49) forwards;
    /* Ensure no other transition interferes while rolling */
    transition: none; 
}

/* Add the @keyframes for roll-animation, if not already defined */
@keyframes roll-animation {
    0% { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    100% { transform: rotateX(720deg) rotateY(720deg) rotateZ(360deg); }
}


.face {
    position: absolute;
    width: var(--dice-size);
    height: var(--dice-size);
    border: 1px solid rgba(200, 200, 200, 0.8);
    background-color: #f9f9f9;
    box-shadow: 0 0 20px rgba(0,0,0,0.2) inset;
    border-radius: 10%; /* Rounded corners for the die */
    display: grid;
    padding: calc(var(--dice-size) * 0.1);
    align-content: space-between;
    justify-content: space-between;
}

.pip {
    width: calc(var(--dice-size) * 0.2);
    height: calc(var(--dice-size) * 0.2);
    background-color: #333;
    border-radius: 50%;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.5);
    align-self: center;
    justify-self: center;
}

/* Pip positioning */
.face[data-face="1"] { justify-content: center; align-content: center; }

.face[data-face="2"] {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20%;
}
.face[data-face="2"] .pip {
    width: 20%;
    height: 20%;
}

.face[data-face="3"] {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
}
.face[data-face="3"] .pip:nth-child(1) { grid-column: 1; grid-row: 1; }
.face[data-face="3"] .pip:nth-child(2) { grid-column: 2; grid-row: 2; }
.face[data-face="3"] .pip:nth-child(3) { grid-column: 3; grid-row: 3; }

.face[data-face="4"] {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    justify-items: center;
    align-items: center;
    padding: calc(var(--dice-size) * 0.15);
}
.face[data-face="4"] .pip { align-self: initial; justify-self: initial; } /* Reset */


.face[data-face="5"] {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
}
.face[data-face="5"] .pip { align-self: center; justify-self: center; }
.face[data-face="5"] .pip:nth-child(1) { grid-column: 1; grid-row: 1; }
.face[data-face="5"] .pip:nth-child(2) { grid-column: 3; grid-row: 1; }
.face[data-face="5"] .pip:nth-child(3) { grid-column: 2; grid-row: 2; }
.face[data-face="5"] .pip:nth-child(4) { grid-column: 1; grid-row: 3; }
.face[data-face="5"] .pip:nth-child(5) { grid-column: 3; grid-row: 3; }


.face[data-face="6"] {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    justify-items: center;
    align-items: center;
    padding: calc(var(--dice-size) * 0.15);
}
.face[data-face="6"] .pip { align-self: initial; justify-self: initial; } /* Reset */


/* Front: 1, Back: 2, Right: 3, Left: 4, Top: 6, Bottom: 5
  This mapping is common. Standard dice opposite faces sum to 7.
*/
.face.front  { transform: rotateY(0deg) translateZ(calc(var(--dice-size) / 2)); }
.face.back   { transform: rotateY(180deg) translateZ(calc(var(--dice-size) / 2)); }
.face.right  { transform: rotateY(90deg) translateZ(calc(var(--dice-size) / 2)); }
.face.left   { transform: rotateY(-90deg) translateZ(calc(var(--dice-size) / 2)); }
.face.top    { transform: rotateX(90deg) translateZ(calc(var(--dice-size) / 2)); }
.face.bottom { transform: rotateX(-90deg) translateZ(calc(var(--dice-size) / 2)); }

#turn-indicator {
    font-size: 1.2rem;
    font-weight: 700;
    animation: flash-animation 2s infinite;
}

@keyframes flash-animation {
    0%, 100% { opacity: 1; text-shadow: 0 0 5px var(--glow-color); }
    50% { opacity: 0.8; text-shadow: none; }
}

footer {
    display: block;
    padding-top: 10px;
    flex-shrink: 0;
}

#roll-btn {
    padding: 15px 20px;
    width: 48%;
    font-size: 1.3rem;
    font-weight: bold;
    color: white;
    background: linear-gradient(45deg, var(--red), var(--purple));
    border: none;
    border-radius: 30px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

#all-good-btn {
    padding: 15px 20px;
    width: 48%;
    font-size: 1.3rem;
    font-weight: bold;
    color: white;
    background: linear-gradient(45deg, var(--green), var(--gold));
    border: none;
    border-radius: 30px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    display: none;
}

#all-good-btn.hidden {
    display: none;
}

#all-good-btn:not(.hidden) {
    display: inline-block;
}

#roll-btn:hover:not(:disabled) {
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

#roll-btn:disabled {
    background: #555;
    cursor: not-allowed;
    box-shadow: none;
}

/* Modals */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(5px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

.modal-overlay:not(.hidden) {
    opacity: 1;
    pointer-events: auto;
}

.modal-content {
    background: var(--dark-bg);
    padding: 30px;
    border-radius: 20px;
    border: 2px solid var(--gold);
    box-shadow: 0 0 20px rgba(255, 196, 0, 0.5);
    text-align: center;
    width: 90%;
    max-width: 400px;
    animation: modal-pop 0.3s ease-out forwards;
    transform: scale(0.7);
}

@keyframes modal-pop {
    to { transform: scale(1); }
}

.modal-content h2 {
    color: var(--gold);
    margin-bottom: 20px;
}

.modal-content p {
    margin-bottom: 10px;
    font-size: 1.1rem;
}

.modal-content h3 {
    margin: 20px 0 5px 0;
    font-size: 1.8rem;
}

#prize-text {
    color: var(--gold);
    font-weight: bold;
    font-size: 1.2rem;
    margin-bottom: 20px;
}

.modal-buttons {
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.modal-buttons button {
    padding: 12px 20px;
    font-size: 1rem;
    border-radius: 20px;
    border: none;
    cursor: pointer;
    font-weight: bold;
    transition: transform 0.2s;
}

#play-again-btn {
    background: linear-gradient(45deg, var(--blue), var(--purple));
    color: white;
}
#watch-ad-btn {
    background: linear-gradient(45deg, var(--gold), var(--red));
    color: white;
}
.modal-buttons button:hover {
    transform: scale(1.05);
}

.ad-progress-bar {
    width: 100%;
    height: 10px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 5px;
    margin-top: 20px;
}
.ad-progress {
    width: 100%;
    height: 100%;
    background: var(--gold);
    border-radius: 5px;
    animation: ad-timer-animation 10s linear forwards;
}

@keyframes ad-timer-animation {
    from { width: 100%; }
    to { width: 0%; }
}

#win-bonus-popup {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
    background: var(--gold);
    color: var(--dark-bg);
    padding: 10px 20px;
    border-radius: 20px;
    font-size: 1.5rem;
    font-weight: bold;
    z-index: 101;
    animation: fade-in-out 3s ease-in-out forwards;
}

@keyframes fade-in-out {
    0% { transform: translate(-50%, -50px); opacity: 0; }
    20% { transform: translate(-50%, 0); opacity: 1; }
    80% { transform: translate(-50%, 0); opacity: 1; }
    100% { transform: translate(-50%, 50px); opacity: 0; }
}

.hidden {
    display: none;
    /* Keep opacity/pointer-events for transitions if needed elsewhere,
       but for simple hide/show, display:none is sufficient.
       To maintain transition effects, these would be needed.
       For this case, JS adds/removes the class directly. */
}

/* Responsive Design */
@media (max-width: 768px) {
    :root {
        --dice-size: 80px;
    }
    #game-container {
        height: 100vh;
        width: 100vw;
        max-height: none;
        border-radius: 0;
        padding: 10px;
    }
    header {
        margin-bottom: 10px;
    }
    header h1 { font-size: 1.2rem; }
    #wallet { font-size: 0.9rem; padding: 6px 12px; }

    .player-panel { padding: 8px; gap: 8px; }
    .player-name-score h2 { font-size: 1rem; }
    .avatar { width: 45px; height: 45px; }
    
    .dice-history span { width: 30px; height: 30px; font-size: 0.9rem; }
    #roll-btn { padding: 12px 20px; font-size: 1.2rem; }
}

@media (max-width: 400px) {
    :root {
        --dice-size: 70px;
    }
    .dice-history { display: none; }
    .player-panel { gap: 10px; }
    .player-name-score h2 { font-size: 1rem; }
    .score-text { font-size: 0.8rem; }
}
